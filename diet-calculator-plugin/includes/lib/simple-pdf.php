<?php
/**
 * Simple PDF Generator
 * A lightweight PDF generation class as fallback when TCPDF is not available
 */

// Prevent direct access
if (!defined('ABSPATH')) {
    exit;
}

class SimplePDF {
    private $content;
    private $title;
    private $author;
    
    public function __construct() {
        $this->content = '';
        $this->title = 'Document';
        $this->author = 'WordPress Site';
    }
    
    public function SetTitle($title) {
        $this->title = $title;
    }
    
    public function SetAuthor($author) {
        $this->author = $author;
    }
    
    public function writeHTML($html) {
        // Convert HTML to plain text for simple PDF
        $text = $this->html_to_text($html);
        $this->content .= $text;
    }
    
    public function Output($filename = 'document.pdf', $destination = 'D') {
        // For simplicity, output as text file since creating valid PDF is complex
        $text_content = $this->generate_text_content();
        
        if ($destination === 'D') {
            // Clear any previous output
            if (!headers_sent()) {
                // Download as text file since our PDF generation is basic
                header('Content-Type: text/plain; charset=utf-8');
                header('Content-Disposition: attachment; filename="' . str_replace('.pdf', '.txt', $filename) . '"');
                header('Content-Length: ' . strlen($text_content));
                header('Cache-Control: private, max-age=0, must-revalidate');
                header('Pragma: public');
            }
            
            echo $text_content;
            exit;
        } else {
            return $text_content;
        }
    }
    
    private function html_to_text($html) {
        // Remove HTML tags and convert to readable text
        $text = strip_tags($html);
        $text = html_entity_decode($text, ENT_QUOTES, 'UTF-8');
        $text = preg_replace('/\s+/', ' ', $text);
        return trim($text);
    }
    
    private function generate_text_content() {
        // Generate formatted text content
        $text = "============================================\n";
        $text .= "    " . strtoupper($this->title) . "\n";
        $text .= "    Generated by: " . $this->author . "\n";
        $text .= "    Date: " . date('Y-m-d H:i:s') . "\n";
        $text .= "============================================\n\n";
        
        $text .= $this->content;
        
        $text .= "\n\n============================================\n";
        $text .= "End of Report\n";
        $text .= "============================================\n";
        
        return $text;
    }
    
    private function prepare_text_for_pdf($text) {
        // Escape special PDF characters
        $text = str_replace('(', '\\(', $text);
        $text = str_replace(')', '\\)', $text);
        $text = str_replace('\\', '\\\\', $text);
        
        // Limit length to prevent PDF corruption
        if (strlen($text) > 1000) {
            $text = substr($text, 0, 1000) . '...';
        }
        
        return $text;
    }
}